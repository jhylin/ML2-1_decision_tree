---
title: "Tree models in ChEMBL data"
subtitle: "ML series 2.1 - Decision tree"
draft: true
jupyter: python3
format: html
---

#### **Introduction**

I've now come to a stage to do some more in-depth machine learning work after reading some peer-reviewed papers about it in relation to drug discovery or cheminformatics. From a few of the papers I've read so far, which were dated in the recent years of 2021 and 2022, it seems that traditional machine learning (ML) methods are still indispensible performance-wise.

Currently, the data preparation will be carried out with heavy reference to the materials and methods section from this paper: van Tilborg, D. *et al*. J. Chem. Inf.Model. 2022, 62, 5938-5951.

#### **Retrieving data**

Testing ChEMBL webresource client to fetch data.

```{python}
# Import libraries
# Fetch data through ChEMBL webresource client
from chembl_webresource_client.new_client import new_client

# RDKit modules
from rdkit.Chem import PandasTools

# Dataframe library
#import numpy as np
import pandas as pd

# Progress bar
from tqdm import tqdm
```

Reference: TeachOpenCADD talktorial on compound data acquisition.

Create resource objects to enable API access as suggested.

```{python}
# Targets
targets_api = new_client.target
# Compounds
cpd_api = new_client.molecule
# Bioactivities
bioact_api = new_client.activity
```

Check object type.

```{python}
type(bioact_api)
```

Select a protein target e.g. acetylcholinesterase.

```{python}
# Specify Uniprot ID for acetylcholinesterase
uniprot_id = "P22303"

# Get info from ChEMBL about this protein target, 
# with selected features only
targets = targets_api.get(target_components__accession = uniprot_id).only(
    "target_chembl_id",
    "organism", 
    "pref_name", 
    "target_type"
)
```

The query results are stored in "targets" object (a QuerySet - lazy data evaluation only)

```{python}
# Read "targets" with Pandas
targets = pd.DataFrame.from_records(targets)
targets
```

Select target from this dataframe.

```{python}
select_target = targets.iloc[0]
select_target
```

Save the selected ChEMBL ID first (to be used later).